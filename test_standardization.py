# -*- coding: utf-8 -*-
"""Test_Standardization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-U_gO4365PQg0VlQHQZWmAAvIlDtqVwQ
"""

import unittest
import os
import sklearn
import numpy as np
from sklearn.preprocessing import StandardScaler
import SimpleITK as sitk
import glob

dataset_path_CTRL = ''

file_CTRL = '/*CTRL*.nii' 

images_CTRL = [] 
data_CTRL = []

for image in glob.glob(os.path.normpath(file_CTRL), recursive=True):
  images_CTRL.append(sitk.ReadImage(image, imageIO = "NiftiImageIO"))
data_CTRL = [sitk.GetArrayViewFromImage(x) for x in images_CTRL]

img = sitk.GetArrayFromImage(images_CTRL[][:, , :])

import unittest
class StandardTest(unittest.TestCase):

  def test_st(self):
    self.X = img
    self.stand_data = StandardScaler().fit_transform(self.X)

    var_s = np.var((self.X - self.X.mean())/self.X.std())

    np.testing.assert_array_almost_equal(np.var(self.stand_data), var_s, decimal=1)


if __name__=='__main__':
    unittest.main()