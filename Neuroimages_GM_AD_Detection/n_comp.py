# -*- coding: utf-8 -*-
"""n_comp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hTw86Yka0a1q-jc9qZnTpcbPvsTeV3dY
"""

from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import numpy as np

percentage=[] #insert percentages found.
features=[]

def n_comp(data, percentage):
  '''
  n_comp return the number of components respect to the percentage of cumulative explained variance.

  Parameters
  ----------
  data : ndarray 
        Array obtained from all images.
  percentage: float
        Percentage of cumulative explained variance.
  
  Returns
  -------
  Returns the number of PCs.

  '''
  standardized_data = StandardScaler().fit_transform(data)
  pca = PCA(percentage)
  principalComponents = pca.fit_transform(standardized_data)
  c = pca.n_components_
  return c

for i in percentage:
  features.append(n_comp(dataset, i))